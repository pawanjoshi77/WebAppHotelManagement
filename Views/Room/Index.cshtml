@model WebAppHotelManagement.ViewModel.RoomViewModel
@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(document).ready(function () {
        LoadRoomDetails();
        $("#txtRoomId").val("0");
        $("#btnSave").click(function () {
            if (!$("#formRoom").valid()) {
                return;
            }
            SaveRoomData();
        });
    });

    function DeleteRoom(roomId) {
        if (confirm("Are you sure you want to delete ?")) {
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: { roomId: roomId },
                url: '/Room/DeleteRoomDetails',
                success: function (data) {
                    if (data.success === true) {

                        window.location.reload();
                    }                    
                },
                error: function () {
                    alert('There is some problem processing your data. Please try after some time ');
                },
            });
        }
       
    }

    function EditRoom(roomId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { roomId: roomId },
            url: '/Room/EditRoomDetails',
            success: function (data) {
                console.log(data);
                $("#txtRoomNumber").val(data.RoomNumber);
                $("#txtRoomPrice").val(data.RoomPrice);
                $("#ddBookingStatus").val(data.BookingStatusId);
                $("#ddRoomType").val(data.RoomTypeId);
                $("#txtRoomCapacity").val(data.RoomCapacity);
                $("#txtRoomDescription").val(data.RoomDescription);
                $("#imgRoom").attr('src', "../RoomImages/" + data.RoomImage);
                $("#divAddRoom").modal({ show: true });
                $("#txtRoomId").val(data.RoomId);
                $("#btnSave").text("Update");
            },
            error: function () {
                alert('There is some problem to process your request');
            }
        });
    }

    function LoadRoomDetails() {
        $("#divLoadRoomDetails")

        $.ajax({
            async: true,
            data: 'GET',
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: '/Room/GetAllRooms',
            success: function (data) {
                $("#divLoadRoomDetails").html(data)
            },
            error: function () {
                alert('There is some problem to your request');
            }
        });
    }

    function SaveRoomData() {
        var formData = new FormData();
        formData.append("RoomId", $("#txtRoomId").val());
        formData.append("RoomNumber", $("#txtRoomNumber").val());
        formData.append("RoomPrice", $("#txtRoomPrice").val());
        formData.append("BookingStatusId", $("#ddBookingStatus").val());
        formData.append("RoomTypeId", $("#ddRoomType").val());
        formData.append("RoomCapacity", $("#txtRoomCapacity").val());
        formData.append("RoomDescription", $("#txtRoomDescription").val());
        formData.append("Image", $("#UploadImage").get(0).files[0]);

       

        $.ajax({
            //url: '/getdata',
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetRoomInformation();
                    LoadRoomDetails();
                }
                
                //console.log("Room Numer: ", formData.get('RoomNumber'));

                //alert("Succes")
            },
            error: function () {
                alert('There is some problem processing your request. Please try after some time');
            }
        });
       
    }

    function ResetRoomInformation() {
        $("#txtRoomNumber").val('');
        $("#txtRoomPrice").val('');
        $("#ddBookingStatus").val(1);
        $("#ddRoomType").val(1);
        $("#txtRoomCapacity").val('');
        $("#txtRoomDescription").val('');
        $("#UploadImage").val('');
        $("#txtRoomNumber").focus();
        $("#imgRoom").removeAttr('src');
        $("#txtRoomId").val(0);
        $("#btnSave").val("Save");

    }

    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var fileReader = new FileReader();
            fileReader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }
            fileReader.readAsDataURL(result.files[0]);
        }
    }
</script>

<div style="margin-top:20px;">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divAddRoom" data-backdrop="static" data-keyboard="false">Add Room</button>
</div>

<div id="divAddRoom" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Room</h4>
            </div>
            <div class="modal-body">                
                <div class="container-fluid">
                    <form id="formRoom">
                        @Html.HiddenFor(model => model.RoomId, new { id = "txtRoomId" })
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomNumber)
                                @Html.TextBoxFor(model => model.RoomNumber, new { @class = "form-control", id = "txtRoomNumber" })
                                @Html.ValidationMessageFor(model => model.RoomNumber, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomPrice)
                                @Html.TextBoxFor(model => model.RoomPrice, new { @class = "form-control", id = "txtRoomPrice" })
                                @Html.ValidationMessageFor(model => model.RoomPrice, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.BookingStatusId)
                                @Html.DropDownListFor(model => model.BookingStatusId, @Model.ListOfBookingStatus, new { @class = "form-control", id = "ddBookingStatus" })
                                @Html.ValidationMessageFor(model => model.BookingStatusId, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomTypeId)
                                @Html.DropDownListFor(model => model.RoomTypeId, @Model.ListOfRoomType, new { @class = "form-control", id = "ddRoomType" })
                                @Html.ValidationMessageFor(model => model.RoomTypeId, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomCapacity)
                                @Html.TextBoxFor(model => model.RoomCapacity, new { @class = "form-control", id = "txtRoomCapacity" })
                                @Html.ValidationMessageFor(model => model.RoomCapacity, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6 ">
                                @Html.LabelFor(model => model.RoomDescription)
                                @Html.TextBoxFor(model => model.RoomDescription, new { @class = "form-control", id = "txtRoomDescription" })
                                @Html.ValidationMessageFor(model => model.RoomDescription, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomImage)
                                <input type="file" id="UploadImage" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)" style="margin-bottom:10px;" />
                                <img id="imgRoom" height="150" width="150" style="border:solid" />
                            </div>
                        </div>
                    </form>

                </div>
                
                
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSave" class="btn btn-success">Save</button>&nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">Close</button>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 10px"></div>

<div id="divLoadRoomDetails">

</div>



